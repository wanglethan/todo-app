{"version":3,"sources":["todo/subs.cljs"],"mappings":";AAIA,AAAA,AAAMA,AAAWC;AAAjB,AACM,AAACC,AAAQ,AAAA,AAAA,AAACC,AAAuBF;;AAEvC,AAAA,AAACG,AAEA,AAAKC,AAAGC;AAAR,AACE,AAAA,AAAeD;;AAElB,AAAA,AAACD,AAEC,AAAKC,AAAGC;AAAR,AACI,AAAA,AAAcD;;AAEpB,AAAA,AAACD,AAEC,AAAKC,AAAGC;AAAR,AACI,AAACC,AAAK,AAAA,AAAY,AAAAC,AAA+B,AAAA,AAAQH;AAAvCI,AAAC,AAACT,AAAU,AAAA,AAAcK;AAA1B,AAAA,AAAAI,AAAAA,AAAAD,AAAAC,AAAAD","names":["todo.subs/->keyword","str","cljs.core.keyword","clojure.string/replace","re_frame.core.reg_sub","db","_","cljs.core/vals","G__28893","fexpr__28892"],"sourcesContent":["(ns todo.subs\n  (:require\n   [re-frame.core :as re-frame]))\n\n(defn ->keyword [str]\n      (keyword (clojure.string/replace str #\" \" \"-\")))\n\n(re-frame/reg-sub\n ::active-panel\n (fn [db _]\n   (:active-panel db)))\n\n(re-frame/reg-sub\n  :username\n  (fn [db _]\n      (:active-user db)))\n\n(re-frame/reg-sub\n  :get-todos\n  (fn [db _]\n      (vals (:todo-list ((->keyword (:active-user db)) (:users db))))))"]}